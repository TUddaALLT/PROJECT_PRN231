@model IEnumerable<PROJECT_PRN231.Models.ExamQuestion>

@{
	ViewData["Title"] = "Index";
	int userId = Accessor.HttpContext.Session.GetInt32("UserId").Value;
	string? examTimeString = ViewData["ExamTime"].ToString();
	int examTime = int.Parse(examTimeString);
}

<h1>Index</h1>

<p>
	Question
</p>
<div id="countdown">@examTime</div>
@foreach (var item in Model)
{
	<div>
		@Html.DisplayFor(modelItem => item.Question.QuestionText)
		<form id="form1" runat="server">
			<div>
				@foreach (var answer in item.Question.Answers)
				{
					if (answer.UserExamQuestionAnswers.Count > 0)
					{
						<input type="radio"
							   name="answer"
							   value="@answer.AnswerId"
							   data-questionId="@answer.QuestionId"
							   data-examId="@Model.FirstOrDefault().ExamId"
							   data-userId="@userId"
							   data-isCorrect="@answer.IsCorrect"
							   checked /> @answer.Value <br />
					}
					else
					{
						<input type="radio"
							   name="answer"
							   value="@answer.AnswerId"
							   data-questionId="@answer.QuestionId"
							   data-examId="@Model.FirstOrDefault().ExamId"
							   data-userId="@userId"
							   data-isCorrect="@answer.IsCorrect" /> @answer.Value <br />
					}


				}
			</div>
		</form>
	</div>
}
<div>
	<a asp-action="FinishExam" asp-route-userId="@userId" asp-route-examId="@Model.FirstOrDefault().ExamId">Finish exam</a>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
	$(document).ready(function () {
		$('input[type="radio"]').change(function () {
			if (this.checked) {
				var userId = $(this).attr("data-userId")
				var examId = $(this).attr("data-examId");
				var questionId = $(this).attr("data-questionId");
				var answerId = $(this).val();
				var isCorrect = $(this).attr("data-isCorrect");
				// Add more properties as needed
				// Make AJAX call to the controller method
				$.ajax({
					type: "POST",
					url: "TakingExam/SelectAnswer",
					data: {
						userId: userId,
						examId: examId,
						questionId: questionId,
						answerId: answerId,
						isCorrect: isCorrect
					},
					success: function (response) {
						console.log("Success");
						// Handle success response if needed
					},
					error: function (xhr, textStatus, errorThrown) {
						console.log("Error: " + errorThrown);
						// Handle error if needed
					}
				});
			}
		});
	});
</script>

<script>
	var countdownElement = document.getElementById('countdown');
	var remainingTimeInSeconds = @examTime;

	function updateCountdown() {
		remainingTimeInSeconds--;
		if (remainingTimeInSeconds <= 0) {
			clearInterval(countdownInterval);
			// Change the URL when countdown finishes
			var url = '@Url.Action("FinishExam", "TakingExam")?userId=' + @userId+'&examId=' + @Model.FirstOrDefault().ExamId
			window.location.href = url;
		} else {
			countdownElement.innerText = formatTime(remainingTimeInSeconds);
		}
	}

	var countdownInterval = setInterval(updateCountdown, 1000);

	function formatTime(seconds) {
		var minutes = Math.floor(seconds / 60);
		seconds = Math.floor(seconds % 60);

		return ('0' + minutes).slice(-2) + ':' + ('0' + seconds).slice(-2);
	}
</script>

